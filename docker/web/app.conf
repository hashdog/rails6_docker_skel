upstream rails_app {
   server app:3000;
}

server {  
   # define your domain
   server_name ${DOMAIN};
   # define the public application root
   # root   /app/public;
   # index  index.html;
   # define where Nginx should write its logs
   access_log /app/log/nginx.access.log;
   error_log /app/log/nginx.error.log;

   listen 443 ssl;

   ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;

   ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

   include /etc/nginx/user.conf.d/option-ssl-nginx;

   ssl_dhparam /etc/nginx/user.conf.d/ssl-dhparams.pem;

   # deny requests for files that should never be accessed
   location ~ /\. {
      deny all;
   }
   location ~* ^.+\.(rb|log)$ {
      deny all;
   }
   
   location ~ ^/(storage/)$  {
      return 404;
   }

   location ~ ^/(storage)/*  {
      root /app/;
      autoindex off;
      gzip_static on;
      expires max;
      add_header Cache-Control public;
   }
   # serve static (compiled) assets directly if they exist (for rails production)
   location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
      try_files $uri @rails;
      access_log off;
      gzip_static on;
      # to serve pre-gzipped version
      expires max;
      add_header Cache-Control public;

      add_header Last-Modified "";
      add_header ETag "";
      break;
   }

   # send non-static file requests to the app server
   location / {
      try_files $uri @rails;
   }

   location @rails {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto https;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://rails_app;
   }

   location /cable {
    proxy_pass http://rails_app;
    proxy_http_version 1.1;
    proxy_set_header Upgrade websocket;
    proxy_set_header Connection Upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
